<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mJ+mrKkUXwAAAABJRU5ErkJggg==
</value>
  </data>
</root>